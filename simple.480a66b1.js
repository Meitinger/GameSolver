!function(){function e(e,t,r,i){Object.defineProperty(e,t,{get:r,set:i,enumerable:!0,configurable:!0})}var t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},r={},i={},n=t.parcelRequirec9a8;null==n&&((n=function(e){if(e in r)return r[e].exports;if(e in i){var t=i[e];delete i[e];var n={id:e,exports:{}};return r[e]=n,t.call(n.exports,n,n.exports),n.exports}var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}).register=function(e,t){i[e]=t},t.parcelRequirec9a8=n),importScripts("./tictactoe.56693f30.js"),importScripts("./tictactoe.37f29f78.js");var a={};e(a,"Schema",(function(){return c})),e(a,"Simple",(function(){return p}));var s=n("e6kUJ"),o=n("PAmCh"),u=n("1zfaW"),c={type:"object",properties:{players:{type:"object",description:"An associative list of players, where the index is player' name.",patternProperties:{".":{type:"object",properties:{color:{type:"string",description:'The player\'s color, either in short "#rgb" form, long "#rrggbb" form, or with alpha "rgba(rrr,ggg,bbb,aaa)".',pattern:"^(#([a-fA-F0-9]{3}|[a-fA-F0-9]{6})|rgba\\([0-9]+,[0-9]+,[0-9]+,[0-9]+\\))$"},moves:{type:"object",description:"An associative list of moves the player can make, where the index specifies the starting state.",patternProperties:{"^":{type:"array",description:"An unique list of end state the current player can reach from the current start state.",uniqueItems:!0,items:{type:"string"}}},required:[],additionalProperties:!1},wins:{type:"array",description:"An unique list of states in which the current player wins.",uniqueItems:!0,items:{type:"string"}}},required:["color","moves","wins"],additionalProperties:!1}},required:[],additionalProperties:!1},start:{type:"string",description:"The name of the initial state in which the game starts."}},required:["players","start"],additionalProperties:!1},p=function(e){"use strict";s.inherits(r,e);var t=s.createSuper(r);function r(){var e;return s.classCallCheck(this,r),e=t.apply(this,arguments),s.defineProperty(s.assertThisInitialized(e),"schema",c),e}return s.createClass(r,[{key:"getPlayers",value:function(){return Object.entries(this.getSetup().players).map((function(e){var t=s.slicedToArray(e,2);return{name:t[0],color:t[1].color}}))}},{key:"encodeState",value:function(e){return e}},{key:"decodeState",value:function(e){return e}},{key:"getInitialState",value:function(){return this.getSetup().start}},{key:"getNextStates",value:function(e){var t;return Object.values(this.getSetup().players).map((function(r,i){return[i,null!==(t=r.moves[e])&&void 0!==t?t:[]]}))}},{key:"getWinningPlayersFromState",value:function(e){return Object.values(this.getSetup().players).reduce((function(t,r,i){return r.wins.includes(e)&&t.push(i),t}),[])}},{key:"renderState",value:function(){throw new Error("Not implemented.")}}]),r}(u.TypedGame);u.isWorker()&&o.expose(new p)}();
//# sourceMappingURL=simple.480a66b1.js.map
