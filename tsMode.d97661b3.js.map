{"mappings":"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","sources":["node_modules/monaco-editor/esm/vs/language/typescript/tsMode.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.33.0(4b1abad427e58dbedc1215d99a0902ffc885fcd4)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __reExport = (target, module, copyDefault, desc) => {\n  if (module && typeof module === \"object\" || typeof module === \"function\") {\n    for (let key of __getOwnPropNames(module))\n      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== \"default\"))\n        __defProp(target, key, { get: () => module[key], enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable });\n  }\n  return target;\n};\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/language/typescript/workerManager.ts\nvar WorkerManager = class {\n  _modeId;\n  _defaults;\n  _configChangeListener;\n  _updateExtraLibsToken;\n  _extraLibsChangeListener;\n  _worker;\n  _client;\n  constructor(modeId, defaults) {\n    this._modeId = modeId;\n    this._defaults = defaults;\n    this._worker = null;\n    this._client = null;\n    this._configChangeListener = this._defaults.onDidChange(() => this._stopWorker());\n    this._updateExtraLibsToken = 0;\n    this._extraLibsChangeListener = this._defaults.onDidExtraLibsChange(() => this._updateExtraLibs());\n  }\n  _stopWorker() {\n    if (this._worker) {\n      this._worker.dispose();\n      this._worker = null;\n    }\n    this._client = null;\n  }\n  dispose() {\n    this._configChangeListener.dispose();\n    this._extraLibsChangeListener.dispose();\n    this._stopWorker();\n  }\n  async _updateExtraLibs() {\n    if (!this._worker) {\n      return;\n    }\n    const myToken = ++this._updateExtraLibsToken;\n    const proxy = await this._worker.getProxy();\n    if (this._updateExtraLibsToken !== myToken) {\n      return;\n    }\n    proxy.updateExtraLibs(this._defaults.getExtraLibs());\n  }\n  _getClient() {\n    if (!this._client) {\n      this._worker = monaco_editor_core_exports.editor.createWebWorker({\n        moduleId: \"vs/language/typescript/tsWorker\",\n        label: this._modeId,\n        keepIdleModels: true,\n        createData: {\n          compilerOptions: this._defaults.getCompilerOptions(),\n          extraLibs: this._defaults.getExtraLibs(),\n          customWorkerPath: this._defaults.workerOptions.customWorkerPath,\n          inlayHintsOptions: this._defaults.inlayHintsOptions\n        }\n      });\n      let p = this._worker.getProxy();\n      if (this._defaults.getEagerModelSync()) {\n        p = p.then((worker) => {\n          if (this._worker) {\n            return this._worker.withSyncedResources(monaco_editor_core_exports.editor.getModels().filter((model) => model.getLanguageId() === this._modeId).map((model) => model.uri));\n          }\n          return worker;\n        });\n      }\n      this._client = p;\n    }\n    return this._client;\n  }\n  getLanguageServiceWorker(...resources) {\n    let _client;\n    return this._getClient().then((client) => {\n      _client = client;\n    }).then((_) => {\n      if (this._worker) {\n        return this._worker.withSyncedResources(resources);\n      }\n    }).then((_) => _client);\n  }\n};\n\n// src/language/typescript/languageFeatures.ts\nimport {\n  typescriptDefaults\n} from \"./monaco.contribution.js\";\n\n// src/language/typescript/lib/lib.index.ts\nvar libFileSet = {};\nlibFileSet[\"lib.d.ts\"] = true;\nlibFileSet[\"lib.dom.d.ts\"] = true;\nlibFileSet[\"lib.dom.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.collection.d.ts\"] = true;\nlibFileSet[\"lib.es2015.core.d.ts\"] = true;\nlibFileSet[\"lib.es2015.d.ts\"] = true;\nlibFileSet[\"lib.es2015.generator.d.ts\"] = true;\nlibFileSet[\"lib.es2015.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2015.proxy.d.ts\"] = true;\nlibFileSet[\"lib.es2015.reflect.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2016.array.include.d.ts\"] = true;\nlibFileSet[\"lib.es2016.d.ts\"] = true;\nlibFileSet[\"lib.es2016.full.d.ts\"] = true;\nlibFileSet[\"lib.es2017.d.ts\"] = true;\nlibFileSet[\"lib.es2017.full.d.ts\"] = true;\nlibFileSet[\"lib.es2017.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2017.object.d.ts\"] = true;\nlibFileSet[\"lib.es2017.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2017.string.d.ts\"] = true;\nlibFileSet[\"lib.es2017.typedarrays.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asyncgenerator.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asynciterable.d.ts\"] = true;\nlibFileSet[\"lib.es2018.d.ts\"] = true;\nlibFileSet[\"lib.es2018.full.d.ts\"] = true;\nlibFileSet[\"lib.es2018.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2018.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2018.regexp.d.ts\"] = true;\nlibFileSet[\"lib.es2019.array.d.ts\"] = true;\nlibFileSet[\"lib.es2019.d.ts\"] = true;\nlibFileSet[\"lib.es2019.full.d.ts\"] = true;\nlibFileSet[\"lib.es2019.object.d.ts\"] = true;\nlibFileSet[\"lib.es2019.string.d.ts\"] = true;\nlibFileSet[\"lib.es2019.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2020.bigint.d.ts\"] = true;\nlibFileSet[\"lib.es2020.d.ts\"] = true;\nlibFileSet[\"lib.es2020.full.d.ts\"] = true;\nlibFileSet[\"lib.es2020.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2020.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2020.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2020.string.d.ts\"] = true;\nlibFileSet[\"lib.es2020.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2021.d.ts\"] = true;\nlibFileSet[\"lib.es2021.full.d.ts\"] = true;\nlibFileSet[\"lib.es2021.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2021.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2021.string.d.ts\"] = true;\nlibFileSet[\"lib.es2021.weakref.d.ts\"] = true;\nlibFileSet[\"lib.es5.d.ts\"] = true;\nlibFileSet[\"lib.es6.d.ts\"] = true;\nlibFileSet[\"lib.esnext.d.ts\"] = true;\nlibFileSet[\"lib.esnext.full.d.ts\"] = true;\nlibFileSet[\"lib.esnext.intl.d.ts\"] = true;\nlibFileSet[\"lib.esnext.promise.d.ts\"] = true;\nlibFileSet[\"lib.esnext.string.d.ts\"] = true;\nlibFileSet[\"lib.esnext.weakref.d.ts\"] = true;\nlibFileSet[\"lib.scripthost.d.ts\"] = true;\nlibFileSet[\"lib.webworker.d.ts\"] = true;\nlibFileSet[\"lib.webworker.importscripts.d.ts\"] = true;\nlibFileSet[\"lib.webworker.iterable.d.ts\"] = true;\n\n// src/language/typescript/languageFeatures.ts\nfunction flattenDiagnosticMessageText(diag, newLine, indent = 0) {\n  if (typeof diag === \"string\") {\n    return diag;\n  } else if (diag === void 0) {\n    return \"\";\n  }\n  let result = \"\";\n  if (indent) {\n    result += newLine;\n    for (let i = 0; i < indent; i++) {\n      result += \"  \";\n    }\n  }\n  result += diag.messageText;\n  indent++;\n  if (diag.next) {\n    for (const kid of diag.next) {\n      result += flattenDiagnosticMessageText(kid, newLine, indent);\n    }\n  }\n  return result;\n}\nfunction displayPartsToString(displayParts) {\n  if (displayParts) {\n    return displayParts.map((displayPart) => displayPart.text).join(\"\");\n  }\n  return \"\";\n}\nvar Adapter = class {\n  constructor(_worker) {\n    this._worker = _worker;\n  }\n  _textSpanToRange(model, span) {\n    let p1 = model.getPositionAt(span.start);\n    let p2 = model.getPositionAt(span.start + span.length);\n    let { lineNumber: startLineNumber, column: startColumn } = p1;\n    let { lineNumber: endLineNumber, column: endColumn } = p2;\n    return { startLineNumber, startColumn, endLineNumber, endColumn };\n  }\n};\nvar LibFiles = class {\n  constructor(_worker) {\n    this._worker = _worker;\n    this._libFiles = {};\n    this._hasFetchedLibFiles = false;\n    this._fetchLibFilesPromise = null;\n  }\n  _libFiles;\n  _hasFetchedLibFiles;\n  _fetchLibFilesPromise;\n  isLibFile(uri) {\n    if (!uri) {\n      return false;\n    }\n    if (uri.path.indexOf(\"/lib.\") === 0) {\n      return !!libFileSet[uri.path.slice(1)];\n    }\n    return false;\n  }\n  getOrCreateModel(fileName) {\n    const uri = monaco_editor_core_exports.Uri.parse(fileName);\n    const model = monaco_editor_core_exports.editor.getModel(uri);\n    if (model) {\n      return model;\n    }\n    if (this.isLibFile(uri) && this._hasFetchedLibFiles) {\n      return monaco_editor_core_exports.editor.createModel(this._libFiles[uri.path.slice(1)], \"typescript\", uri);\n    }\n    const matchedLibFile = typescriptDefaults.getExtraLibs()[fileName];\n    if (matchedLibFile) {\n      return monaco_editor_core_exports.editor.createModel(matchedLibFile.content, \"typescript\", uri);\n    }\n    return null;\n  }\n  _containsLibFile(uris) {\n    for (let uri of uris) {\n      if (this.isLibFile(uri)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  async fetchLibFilesIfNecessary(uris) {\n    if (!this._containsLibFile(uris)) {\n      return;\n    }\n    await this._fetchLibFiles();\n  }\n  _fetchLibFiles() {\n    if (!this._fetchLibFilesPromise) {\n      this._fetchLibFilesPromise = this._worker().then((w) => w.getLibFiles()).then((libFiles) => {\n        this._hasFetchedLibFiles = true;\n        this._libFiles = libFiles;\n      });\n    }\n    return this._fetchLibFilesPromise;\n  }\n};\nvar DiagnosticsAdapter = class extends Adapter {\n  constructor(_libFiles, _defaults, _selector, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n    this._defaults = _defaults;\n    this._selector = _selector;\n    const onModelAdd = (model) => {\n      if (model.getLanguageId() !== _selector) {\n        return;\n      }\n      const maybeValidate = () => {\n        const { onlyVisible } = this._defaults.getDiagnosticsOptions();\n        if (onlyVisible) {\n          if (model.isAttachedToEditor()) {\n            this._doValidate(model);\n          }\n        } else {\n          this._doValidate(model);\n        }\n      };\n      let handle;\n      const changeSubscription = model.onDidChangeContent(() => {\n        clearTimeout(handle);\n        handle = window.setTimeout(maybeValidate, 500);\n      });\n      const visibleSubscription = model.onDidChangeAttached(() => {\n        const { onlyVisible } = this._defaults.getDiagnosticsOptions();\n        if (onlyVisible) {\n          if (model.isAttachedToEditor()) {\n            maybeValidate();\n          } else {\n            monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n          }\n        }\n      });\n      this._listener[model.uri.toString()] = {\n        dispose() {\n          changeSubscription.dispose();\n          visibleSubscription.dispose();\n          clearTimeout(handle);\n        }\n      };\n      maybeValidate();\n    };\n    const onModelRemoved = (model) => {\n      monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n      const key = model.uri.toString();\n      if (this._listener[key]) {\n        this._listener[key].dispose();\n        delete this._listener[key];\n      }\n    };\n    this._disposables.push(monaco_editor_core_exports.editor.onDidCreateModel((model) => onModelAdd(model)));\n    this._disposables.push(monaco_editor_core_exports.editor.onWillDisposeModel(onModelRemoved));\n    this._disposables.push(monaco_editor_core_exports.editor.onDidChangeModelLanguage((event) => {\n      onModelRemoved(event.model);\n      onModelAdd(event.model);\n    }));\n    this._disposables.push({\n      dispose() {\n        for (const model of monaco_editor_core_exports.editor.getModels()) {\n          onModelRemoved(model);\n        }\n      }\n    });\n    const recomputeDiagostics = () => {\n      for (const model of monaco_editor_core_exports.editor.getModels()) {\n        onModelRemoved(model);\n        onModelAdd(model);\n      }\n    };\n    this._disposables.push(this._defaults.onDidChange(recomputeDiagostics));\n    this._disposables.push(this._defaults.onDidExtraLibsChange(recomputeDiagostics));\n    monaco_editor_core_exports.editor.getModels().forEach((model) => onModelAdd(model));\n  }\n  _disposables = [];\n  _listener = /* @__PURE__ */ Object.create(null);\n  dispose() {\n    this._disposables.forEach((d) => d && d.dispose());\n    this._disposables = [];\n  }\n  async _doValidate(model) {\n    const worker = await this._worker(model.uri);\n    if (model.isDisposed()) {\n      return;\n    }\n    const promises = [];\n    const { noSyntaxValidation, noSemanticValidation, noSuggestionDiagnostics } = this._defaults.getDiagnosticsOptions();\n    if (!noSyntaxValidation) {\n      promises.push(worker.getSyntacticDiagnostics(model.uri.toString()));\n    }\n    if (!noSemanticValidation) {\n      promises.push(worker.getSemanticDiagnostics(model.uri.toString()));\n    }\n    if (!noSuggestionDiagnostics) {\n      promises.push(worker.getSuggestionDiagnostics(model.uri.toString()));\n    }\n    const allDiagnostics = await Promise.all(promises);\n    if (!allDiagnostics || model.isDisposed()) {\n      return;\n    }\n    const diagnostics = allDiagnostics.reduce((p, c) => c.concat(p), []).filter((d) => (this._defaults.getDiagnosticsOptions().diagnosticCodesToIgnore || []).indexOf(d.code) === -1);\n    const relatedUris = diagnostics.map((d) => d.relatedInformation || []).reduce((p, c) => c.concat(p), []).map((relatedInformation) => relatedInformation.file ? monaco_editor_core_exports.Uri.parse(relatedInformation.file.fileName) : null);\n    await this._libFiles.fetchLibFilesIfNecessary(relatedUris);\n    if (model.isDisposed()) {\n      return;\n    }\n    monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, diagnostics.map((d) => this._convertDiagnostics(model, d)));\n  }\n  _convertDiagnostics(model, diag) {\n    const diagStart = diag.start || 0;\n    const diagLength = diag.length || 1;\n    const { lineNumber: startLineNumber, column: startColumn } = model.getPositionAt(diagStart);\n    const { lineNumber: endLineNumber, column: endColumn } = model.getPositionAt(diagStart + diagLength);\n    const tags = [];\n    if (diag.reportsUnnecessary) {\n      tags.push(monaco_editor_core_exports.MarkerTag.Unnecessary);\n    }\n    if (diag.reportsDeprecated) {\n      tags.push(monaco_editor_core_exports.MarkerTag.Deprecated);\n    }\n    return {\n      severity: this._tsDiagnosticCategoryToMarkerSeverity(diag.category),\n      startLineNumber,\n      startColumn,\n      endLineNumber,\n      endColumn,\n      message: flattenDiagnosticMessageText(diag.messageText, \"\\n\"),\n      code: diag.code.toString(),\n      tags,\n      relatedInformation: this._convertRelatedInformation(model, diag.relatedInformation)\n    };\n  }\n  _convertRelatedInformation(model, relatedInformation) {\n    if (!relatedInformation) {\n      return [];\n    }\n    const result = [];\n    relatedInformation.forEach((info) => {\n      let relatedResource = model;\n      if (info.file) {\n        relatedResource = this._libFiles.getOrCreateModel(info.file.fileName);\n      }\n      if (!relatedResource) {\n        return;\n      }\n      const infoStart = info.start || 0;\n      const infoLength = info.length || 1;\n      const { lineNumber: startLineNumber, column: startColumn } = relatedResource.getPositionAt(infoStart);\n      const { lineNumber: endLineNumber, column: endColumn } = relatedResource.getPositionAt(infoStart + infoLength);\n      result.push({\n        resource: relatedResource.uri,\n        startLineNumber,\n        startColumn,\n        endLineNumber,\n        endColumn,\n        message: flattenDiagnosticMessageText(info.messageText, \"\\n\")\n      });\n    });\n    return result;\n  }\n  _tsDiagnosticCategoryToMarkerSeverity(category) {\n    switch (category) {\n      case 1 /* Error */:\n        return monaco_editor_core_exports.MarkerSeverity.Error;\n      case 3 /* Message */:\n        return monaco_editor_core_exports.MarkerSeverity.Info;\n      case 0 /* Warning */:\n        return monaco_editor_core_exports.MarkerSeverity.Warning;\n      case 2 /* Suggestion */:\n        return monaco_editor_core_exports.MarkerSeverity.Hint;\n    }\n    return monaco_editor_core_exports.MarkerSeverity.Info;\n  }\n};\nvar SuggestAdapter = class extends Adapter {\n  get triggerCharacters() {\n    return [\".\"];\n  }\n  async provideCompletionItems(model, position, _context, token) {\n    const wordInfo = model.getWordUntilPosition(position);\n    const wordRange = new monaco_editor_core_exports.Range(position.lineNumber, wordInfo.startColumn, position.lineNumber, wordInfo.endColumn);\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getCompletionsAtPosition(resource.toString(), offset);\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const suggestions = info.entries.map((entry) => {\n      let range = wordRange;\n      if (entry.replacementSpan) {\n        const p1 = model.getPositionAt(entry.replacementSpan.start);\n        const p2 = model.getPositionAt(entry.replacementSpan.start + entry.replacementSpan.length);\n        range = new monaco_editor_core_exports.Range(p1.lineNumber, p1.column, p2.lineNumber, p2.column);\n      }\n      const tags = [];\n      if (entry.kindModifiers?.indexOf(\"deprecated\") !== -1) {\n        tags.push(monaco_editor_core_exports.languages.CompletionItemTag.Deprecated);\n      }\n      return {\n        uri: resource,\n        position,\n        offset,\n        range,\n        label: entry.name,\n        insertText: entry.name,\n        sortText: entry.sortText,\n        kind: SuggestAdapter.convertKind(entry.kind),\n        tags\n      };\n    });\n    return {\n      suggestions\n    };\n  }\n  async resolveCompletionItem(item, token) {\n    const myItem = item;\n    const resource = myItem.uri;\n    const position = myItem.position;\n    const offset = myItem.offset;\n    const worker = await this._worker(resource);\n    const details = await worker.getCompletionEntryDetails(resource.toString(), offset, myItem.label);\n    if (!details) {\n      return myItem;\n    }\n    return {\n      uri: resource,\n      position,\n      label: details.name,\n      kind: SuggestAdapter.convertKind(details.kind),\n      detail: displayPartsToString(details.displayParts),\n      documentation: {\n        value: SuggestAdapter.createDocumentationString(details)\n      }\n    };\n  }\n  static convertKind(kind) {\n    switch (kind) {\n      case Kind.primitiveType:\n      case Kind.keyword:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Keyword;\n      case Kind.variable:\n      case Kind.localVariable:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Variable;\n      case Kind.memberVariable:\n      case Kind.memberGetAccessor:\n      case Kind.memberSetAccessor:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Field;\n      case Kind.function:\n      case Kind.memberFunction:\n      case Kind.constructSignature:\n      case Kind.callSignature:\n      case Kind.indexSignature:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Function;\n      case Kind.enum:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Enum;\n      case Kind.module:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Module;\n      case Kind.class:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Class;\n      case Kind.interface:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Interface;\n      case Kind.warning:\n        return monaco_editor_core_exports.languages.CompletionItemKind.File;\n    }\n    return monaco_editor_core_exports.languages.CompletionItemKind.Property;\n  }\n  static createDocumentationString(details) {\n    let documentationString = displayPartsToString(details.documentation);\n    if (details.tags) {\n      for (const tag of details.tags) {\n        documentationString += `\n\n${tagToString(tag)}`;\n      }\n    }\n    return documentationString;\n  }\n};\nfunction tagToString(tag) {\n  let tagLabel = `*@${tag.name}*`;\n  if (tag.name === \"param\" && tag.text) {\n    const [paramName, ...rest] = tag.text;\n    tagLabel += `\\`${paramName.text}\\``;\n    if (rest.length > 0)\n      tagLabel += ` \\u2014 ${rest.map((r) => r.text).join(\" \")}`;\n  } else if (Array.isArray(tag.text)) {\n    tagLabel += ` \\u2014 ${tag.text.map((r) => r.text).join(\" \")}`;\n  } else if (tag.text) {\n    tagLabel += ` \\u2014 ${tag.text}`;\n  }\n  return tagLabel;\n}\nvar SignatureHelpAdapter = class extends Adapter {\n  signatureHelpTriggerCharacters = [\"(\", \",\"];\n  static _toSignatureHelpTriggerReason(context) {\n    switch (context.triggerKind) {\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.TriggerCharacter:\n        if (context.triggerCharacter) {\n          if (context.isRetrigger) {\n            return { kind: \"retrigger\", triggerCharacter: context.triggerCharacter };\n          } else {\n            return { kind: \"characterTyped\", triggerCharacter: context.triggerCharacter };\n          }\n        } else {\n          return { kind: \"invoked\" };\n        }\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.ContentChange:\n        return context.isRetrigger ? { kind: \"retrigger\" } : { kind: \"invoked\" };\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.Invoke:\n      default:\n        return { kind: \"invoked\" };\n    }\n  }\n  async provideSignatureHelp(model, position, token, context) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getSignatureHelpItems(resource.toString(), offset, {\n      triggerReason: SignatureHelpAdapter._toSignatureHelpTriggerReason(context)\n    });\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const ret = {\n      activeSignature: info.selectedItemIndex,\n      activeParameter: info.argumentIndex,\n      signatures: []\n    };\n    info.items.forEach((item) => {\n      const signature = {\n        label: \"\",\n        parameters: []\n      };\n      signature.documentation = {\n        value: displayPartsToString(item.documentation)\n      };\n      signature.label += displayPartsToString(item.prefixDisplayParts);\n      item.parameters.forEach((p, i, a) => {\n        const label = displayPartsToString(p.displayParts);\n        const parameter = {\n          label,\n          documentation: {\n            value: displayPartsToString(p.documentation)\n          }\n        };\n        signature.label += label;\n        signature.parameters.push(parameter);\n        if (i < a.length - 1) {\n          signature.label += displayPartsToString(item.separatorDisplayParts);\n        }\n      });\n      signature.label += displayPartsToString(item.suffixDisplayParts);\n      ret.signatures.push(signature);\n    });\n    return {\n      value: ret,\n      dispose() {\n      }\n    };\n  }\n};\nvar QuickInfoAdapter = class extends Adapter {\n  async provideHover(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getQuickInfoAtPosition(resource.toString(), offset);\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const documentation = displayPartsToString(info.documentation);\n    const tags = info.tags ? info.tags.map((tag) => tagToString(tag)).join(\"  \\n\\n\") : \"\";\n    const contents = displayPartsToString(info.displayParts);\n    return {\n      range: this._textSpanToRange(model, info.textSpan),\n      contents: [\n        {\n          value: \"```typescript\\n\" + contents + \"\\n```\\n\"\n        },\n        {\n          value: documentation + (tags ? \"\\n\\n\" + tags : \"\")\n        }\n      ]\n    };\n  }\n};\nvar OccurrencesAdapter = class extends Adapter {\n  async provideDocumentHighlights(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getOccurrencesAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    return entries.map((entry) => {\n      return {\n        range: this._textSpanToRange(model, entry.textSpan),\n        kind: entry.isWriteAccess ? monaco_editor_core_exports.languages.DocumentHighlightKind.Write : monaco_editor_core_exports.languages.DocumentHighlightKind.Text\n      };\n    });\n  }\n};\nvar DefinitionAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideDefinition(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getDefinitionAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    await this._libFiles.fetchLibFilesIfNecessary(entries.map((entry) => monaco_editor_core_exports.Uri.parse(entry.fileName)));\n    if (model.isDisposed()) {\n      return;\n    }\n    const result = [];\n    for (let entry of entries) {\n      const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n      if (refModel) {\n        result.push({\n          uri: refModel.uri,\n          range: this._textSpanToRange(refModel, entry.textSpan)\n        });\n      }\n    }\n    return result;\n  }\n};\nvar ReferenceAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideReferences(model, position, context, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getReferencesAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    await this._libFiles.fetchLibFilesIfNecessary(entries.map((entry) => monaco_editor_core_exports.Uri.parse(entry.fileName)));\n    if (model.isDisposed()) {\n      return;\n    }\n    const result = [];\n    for (let entry of entries) {\n      const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n      if (refModel) {\n        result.push({\n          uri: refModel.uri,\n          range: this._textSpanToRange(refModel, entry.textSpan)\n        });\n      }\n    }\n    return result;\n  }\n};\nvar OutlineAdapter = class extends Adapter {\n  async provideDocumentSymbols(model, token) {\n    const resource = model.uri;\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const items = await worker.getNavigationBarItems(resource.toString());\n    if (!items || model.isDisposed()) {\n      return;\n    }\n    const convert = (bucket, item, containerLabel) => {\n      let result2 = {\n        name: item.text,\n        detail: \"\",\n        kind: outlineTypeTable[item.kind] || monaco_editor_core_exports.languages.SymbolKind.Variable,\n        range: this._textSpanToRange(model, item.spans[0]),\n        selectionRange: this._textSpanToRange(model, item.spans[0]),\n        tags: []\n      };\n      if (containerLabel)\n        result2.containerName = containerLabel;\n      if (item.childItems && item.childItems.length > 0) {\n        for (let child of item.childItems) {\n          convert(bucket, child, result2.name);\n        }\n      }\n      bucket.push(result2);\n    };\n    let result = [];\n    items.forEach((item) => convert(result, item));\n    return result;\n  }\n};\nvar Kind = class {\n};\n__publicField(Kind, \"unknown\", \"\");\n__publicField(Kind, \"keyword\", \"keyword\");\n__publicField(Kind, \"script\", \"script\");\n__publicField(Kind, \"module\", \"module\");\n__publicField(Kind, \"class\", \"class\");\n__publicField(Kind, \"interface\", \"interface\");\n__publicField(Kind, \"type\", \"type\");\n__publicField(Kind, \"enum\", \"enum\");\n__publicField(Kind, \"variable\", \"var\");\n__publicField(Kind, \"localVariable\", \"local var\");\n__publicField(Kind, \"function\", \"function\");\n__publicField(Kind, \"localFunction\", \"local function\");\n__publicField(Kind, \"memberFunction\", \"method\");\n__publicField(Kind, \"memberGetAccessor\", \"getter\");\n__publicField(Kind, \"memberSetAccessor\", \"setter\");\n__publicField(Kind, \"memberVariable\", \"property\");\n__publicField(Kind, \"constructorImplementation\", \"constructor\");\n__publicField(Kind, \"callSignature\", \"call\");\n__publicField(Kind, \"indexSignature\", \"index\");\n__publicField(Kind, \"constructSignature\", \"construct\");\n__publicField(Kind, \"parameter\", \"parameter\");\n__publicField(Kind, \"typeParameter\", \"type parameter\");\n__publicField(Kind, \"primitiveType\", \"primitive type\");\n__publicField(Kind, \"label\", \"label\");\n__publicField(Kind, \"alias\", \"alias\");\n__publicField(Kind, \"const\", \"const\");\n__publicField(Kind, \"let\", \"let\");\n__publicField(Kind, \"warning\", \"warning\");\nvar outlineTypeTable = /* @__PURE__ */ Object.create(null);\noutlineTypeTable[Kind.module] = monaco_editor_core_exports.languages.SymbolKind.Module;\noutlineTypeTable[Kind.class] = monaco_editor_core_exports.languages.SymbolKind.Class;\noutlineTypeTable[Kind.enum] = monaco_editor_core_exports.languages.SymbolKind.Enum;\noutlineTypeTable[Kind.interface] = monaco_editor_core_exports.languages.SymbolKind.Interface;\noutlineTypeTable[Kind.memberFunction] = monaco_editor_core_exports.languages.SymbolKind.Method;\noutlineTypeTable[Kind.memberVariable] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberGetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberSetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.const] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.localVariable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.function] = monaco_editor_core_exports.languages.SymbolKind.Function;\noutlineTypeTable[Kind.localFunction] = monaco_editor_core_exports.languages.SymbolKind.Function;\nvar FormatHelper = class extends Adapter {\n  static _convertOptions(options) {\n    return {\n      ConvertTabsToSpaces: options.insertSpaces,\n      TabSize: options.tabSize,\n      IndentSize: options.tabSize,\n      IndentStyle: 2 /* Smart */,\n      NewLineCharacter: \"\\n\",\n      InsertSpaceAfterCommaDelimiter: true,\n      InsertSpaceAfterSemicolonInForStatements: true,\n      InsertSpaceBeforeAndAfterBinaryOperators: true,\n      InsertSpaceAfterKeywordsInControlFlowStatements: true,\n      InsertSpaceAfterFunctionKeywordForAnonymousFunctions: true,\n      InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: false,\n      InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: false,\n      InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: false,\n      PlaceOpenBraceOnNewLineForControlBlocks: false,\n      PlaceOpenBraceOnNewLineForFunctions: false\n    };\n  }\n  _convertTextChanges(model, change) {\n    return {\n      text: change.newText,\n      range: this._textSpanToRange(model, change.span)\n    };\n  }\n};\nvar FormatAdapter = class extends FormatHelper {\n  async provideDocumentRangeFormattingEdits(model, range, options, token) {\n    const resource = model.uri;\n    const startOffset = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const endOffset = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const edits = await worker.getFormattingEditsForRange(resource.toString(), startOffset, endOffset, FormatHelper._convertOptions(options));\n    if (!edits || model.isDisposed()) {\n      return;\n    }\n    return edits.map((edit) => this._convertTextChanges(model, edit));\n  }\n};\nvar FormatOnTypeAdapter = class extends FormatHelper {\n  get autoFormatTriggerCharacters() {\n    return [\";\", \"}\", \"\\n\"];\n  }\n  async provideOnTypeFormattingEdits(model, position, ch, options, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const edits = await worker.getFormattingEditsAfterKeystroke(resource.toString(), offset, ch, FormatHelper._convertOptions(options));\n    if (!edits || model.isDisposed()) {\n      return;\n    }\n    return edits.map((edit) => this._convertTextChanges(model, edit));\n  }\n};\nvar CodeActionAdaptor = class extends FormatHelper {\n  async provideCodeActions(model, range, context, token) {\n    const resource = model.uri;\n    const start = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const formatOptions = FormatHelper._convertOptions(model.getOptions());\n    const errorCodes = context.markers.filter((m) => m.code).map((m) => m.code).map(Number);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const codeFixes = await worker.getCodeFixesAtPosition(resource.toString(), start, end, errorCodes, formatOptions);\n    if (!codeFixes || model.isDisposed()) {\n      return { actions: [], dispose: () => {\n      } };\n    }\n    const actions = codeFixes.filter((fix) => {\n      return fix.changes.filter((change) => change.isNewFile).length === 0;\n    }).map((fix) => {\n      return this._tsCodeFixActionToMonacoCodeAction(model, context, fix);\n    });\n    return {\n      actions,\n      dispose: () => {\n      }\n    };\n  }\n  _tsCodeFixActionToMonacoCodeAction(model, context, codeFix) {\n    const edits = [];\n    for (const change of codeFix.changes) {\n      for (const textChange of change.textChanges) {\n        edits.push({\n          resource: model.uri,\n          edit: {\n            range: this._textSpanToRange(model, textChange.span),\n            text: textChange.newText\n          }\n        });\n      }\n    }\n    const action = {\n      title: codeFix.description,\n      edit: { edits },\n      diagnostics: context.markers,\n      kind: \"quickfix\"\n    };\n    return action;\n  }\n};\nvar RenameAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideRenameEdits(model, position, newName, token) {\n    const resource = model.uri;\n    const fileName = resource.toString();\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const renameInfo = await worker.getRenameInfo(fileName, offset, {\n      allowRenameOfImportPath: false\n    });\n    if (renameInfo.canRename === false) {\n      return {\n        edits: [],\n        rejectReason: renameInfo.localizedErrorMessage\n      };\n    }\n    if (renameInfo.fileToRename !== void 0) {\n      throw new Error(\"Renaming files is not supported.\");\n    }\n    const renameLocations = await worker.findRenameLocations(fileName, offset, false, false, false);\n    if (!renameLocations || model.isDisposed()) {\n      return;\n    }\n    const edits = [];\n    for (const renameLocation of renameLocations) {\n      const model2 = this._libFiles.getOrCreateModel(renameLocation.fileName);\n      if (model2) {\n        edits.push({\n          resource: model2.uri,\n          edit: {\n            range: this._textSpanToRange(model2, renameLocation.textSpan),\n            text: newName\n          }\n        });\n      } else {\n        throw new Error(`Unknown file ${renameLocation.fileName}.`);\n      }\n    }\n    return { edits };\n  }\n};\nvar InlayHintsAdapter = class extends Adapter {\n  async provideInlayHints(model, range, token) {\n    const resource = model.uri;\n    const fileName = resource.toString();\n    const start = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return null;\n    }\n    const tsHints = await worker.provideInlayHints(fileName, start, end);\n    const hints = tsHints.map((hint) => {\n      return {\n        ...hint,\n        label: hint.text,\n        position: model.getPositionAt(hint.position),\n        kind: this._convertHintKind(hint.kind)\n      };\n    });\n    return { hints, dispose: () => {\n    } };\n  }\n  _convertHintKind(kind) {\n    switch (kind) {\n      case \"Parameter\":\n        return monaco_editor_core_exports.languages.InlayHintKind.Parameter;\n      case \"Type\":\n        return monaco_editor_core_exports.languages.InlayHintKind.Type;\n      default:\n        return monaco_editor_core_exports.languages.InlayHintKind.Type;\n    }\n  }\n};\n\n// src/language/typescript/tsMode.ts\nvar javaScriptWorker;\nvar typeScriptWorker;\nfunction setupTypeScript(defaults) {\n  typeScriptWorker = setupMode(defaults, \"typescript\");\n}\nfunction setupJavaScript(defaults) {\n  javaScriptWorker = setupMode(defaults, \"javascript\");\n}\nfunction getJavaScriptWorker() {\n  return new Promise((resolve, reject) => {\n    if (!javaScriptWorker) {\n      return reject(\"JavaScript not registered!\");\n    }\n    resolve(javaScriptWorker);\n  });\n}\nfunction getTypeScriptWorker() {\n  return new Promise((resolve, reject) => {\n    if (!typeScriptWorker) {\n      return reject(\"TypeScript not registered!\");\n    }\n    resolve(typeScriptWorker);\n  });\n}\nfunction setupMode(defaults, modeId) {\n  const client = new WorkerManager(modeId, defaults);\n  const worker = (...uris) => {\n    return client.getLanguageServiceWorker(...uris);\n  };\n  const libFiles = new LibFiles(worker);\n  monaco_editor_core_exports.languages.registerCompletionItemProvider(modeId, new SuggestAdapter(worker));\n  monaco_editor_core_exports.languages.registerSignatureHelpProvider(modeId, new SignatureHelpAdapter(worker));\n  monaco_editor_core_exports.languages.registerHoverProvider(modeId, new QuickInfoAdapter(worker));\n  monaco_editor_core_exports.languages.registerDocumentHighlightProvider(modeId, new OccurrencesAdapter(worker));\n  monaco_editor_core_exports.languages.registerDefinitionProvider(modeId, new DefinitionAdapter(libFiles, worker));\n  monaco_editor_core_exports.languages.registerReferenceProvider(modeId, new ReferenceAdapter(libFiles, worker));\n  monaco_editor_core_exports.languages.registerDocumentSymbolProvider(modeId, new OutlineAdapter(worker));\n  monaco_editor_core_exports.languages.registerDocumentRangeFormattingEditProvider(modeId, new FormatAdapter(worker));\n  monaco_editor_core_exports.languages.registerOnTypeFormattingEditProvider(modeId, new FormatOnTypeAdapter(worker));\n  monaco_editor_core_exports.languages.registerCodeActionProvider(modeId, new CodeActionAdaptor(worker));\n  monaco_editor_core_exports.languages.registerRenameProvider(modeId, new RenameAdapter(libFiles, worker));\n  monaco_editor_core_exports.languages.registerInlayHintsProvider(modeId, new InlayHintsAdapter(worker));\n  new DiagnosticsAdapter(libFiles, defaults, modeId, worker);\n  return worker;\n}\nexport {\n  Adapter,\n  CodeActionAdaptor,\n  DefinitionAdapter,\n  DiagnosticsAdapter,\n  FormatAdapter,\n  FormatHelper,\n  FormatOnTypeAdapter,\n  InlayHintsAdapter,\n  Kind,\n  LibFiles,\n  OccurrencesAdapter,\n  OutlineAdapter,\n  QuickInfoAdapter,\n  ReferenceAdapter,\n  RenameAdapter,\n  SignatureHelpAdapter,\n  SuggestAdapter,\n  WorkerManager,\n  flattenDiagnosticMessageText,\n  getJavaScriptWorker,\n  getTypeScriptWorker,\n  setupJavaScript,\n  setupTypeScript\n};\n"],"names":["$55reL","parcelRequire","$16faa998bc37dbb8$var$__defProp","Object","defineProperty","$16faa998bc37dbb8$var$__getOwnPropDesc","getOwnPropertyDescriptor","$16faa998bc37dbb8$var$__getOwnPropNames","getOwnPropertyNames","$16faa998bc37dbb8$var$__hasOwnProp","prototype","hasOwnProperty","$16faa998bc37dbb8$var$__publicField","obj","key","value","enumerable","configurable","writable","$16faa998bc37dbb8$var$__defNormalProp","$16faa998bc37dbb8$var$monaco_editor_core_exports","target","module","copyDefault","desc","call","get","$16faa998bc37dbb8$var$__reExport","$eJmBa","$16faa998bc37dbb8$export$bcff6015853c67ce","_stopWorker","this","_worker","dispose","_client","_configChangeListener","_extraLibsChangeListener","async","myToken","_updateExtraLibsToken","proxy","getProxy","updateExtraLibs","_defaults","getExtraLibs","_getClient","editor","createWebWorker","moduleId","label","_modeId","keepIdleModels","createData","compilerOptions","getCompilerOptions","extraLibs","customWorkerPath","workerOptions","inlayHintsOptions","p","getEagerModelSync","then","worker","withSyncedResources","getModels","filter","model","getLanguageId","map","uri","getLanguageServiceWorker","resources","client","_","constructor","modeId","defaults","onDidChange","onDidExtraLibsChange","_updateExtraLibs","$16faa998bc37dbb8$var$libFileSet","$16faa998bc37dbb8$export$b0b6b56a806dc8a4","diag","newLine","indent","result","i","messageText","next","kid","$16faa998bc37dbb8$var$displayPartsToString","displayParts","displayPart","text","join","$16faa998bc37dbb8$export$906fdd6a257127ec","_textSpanToRange","span","p1","getPositionAt","start","p2","length","lineNumber","startLineNumber","column","startColumn","endLineNumber","endColumn","$16faa998bc37dbb8$export$f8edc958c3ed0e8","isLibFile","path","indexOf","slice","getOrCreateModel","fileName","Uri","parse","getModel","_hasFetchedLibFiles","createModel","_libFiles","matchedLibFile","$lhfgS","typescriptDefaults","content","_containsLibFile","uris","_fetchLibFiles","_fetchLibFilesPromise","w","getLibFiles","libFiles","$16faa998bc37dbb8$export$8105b646adfa9bae","_disposables","forEach","d","isDisposed","promises","noSyntaxValidation","noSemanticValidation","noSuggestionDiagnostics","getDiagnosticsOptions","push","getSyntacticDiagnostics","toString","getSemanticDiagnostics","getSuggestionDiagnostics","allDiagnostics","Promise","all","diagnostics","reduce","c","concat","diagnosticCodesToIgnore","code","relatedUris","relatedInformation","file","fetchLibFilesIfNecessary","setModelMarkers","_selector","_convertDiagnostics","diagStart","diagLength","tags","reportsUnnecessary","MarkerTag","Unnecessary","reportsDeprecated","Deprecated","severity","_tsDiagnosticCategoryToMarkerSeverity","category","message","_convertRelatedInformation","info","relatedResource","infoStart","infoLength","resource","MarkerSeverity","Error","Info","Warning","Hint","super","create","onModelAdd","maybeValidate","onlyVisible","isAttachedToEditor","_doValidate","handle","changeSubscription","onDidChangeContent","clearTimeout","window","setTimeout","visibleSubscription","onDidChangeAttached","_listener","onModelRemoved","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","recomputeDiagostics","$16faa998bc37dbb8$export$60671a5a91f69992","triggerCharacters","position","_context","token","wordInfo","getWordUntilPosition","wordRange","Range","offset","getOffsetAt","getCompletionsAtPosition","entries","entry","ref","range","replacementSpan","kindModifiers","languages","CompletionItemTag","name","insertText","sortText","kind","convertKind","item","myItem","details","getCompletionEntryDetails","detail","documentation","createDocumentationString","static","$16faa998bc37dbb8$export$a84bdc57c5122798","primitiveType","keyword","CompletionItemKind","Keyword","variable","localVariable","Variable","memberVariable","memberGetAccessor","memberSetAccessor","Field","function","memberFunction","constructSignature","callSignature","indexSignature","Function","enum","Enum","Module","class","Class","interface","Interface","warning","File","Property","documentationString","tag","$16faa998bc37dbb8$var$tagToString","tagLabel","paramName","rest","r","Array","isArray","$16faa998bc37dbb8$export$98ee72319d318431","context","triggerKind","SignatureHelpTriggerKind","TriggerCharacter","triggerCharacter","isRetrigger","ContentChange","Invoke","getSignatureHelpItems","triggerReason","_toSignatureHelpTriggerReason","ret","activeSignature","selectedItemIndex","activeParameter","argumentIndex","signatures","items","signature","parameters","prefixDisplayParts","a","parameter","separatorDisplayParts","suffixDisplayParts","$16faa998bc37dbb8$export$914eeedc05863088","getQuickInfoAtPosition","contents","textSpan","$16faa998bc37dbb8$export$e5b6e4d6d767aa52","getOccurrencesAtPosition","isWriteAccess","DocumentHighlightKind","Write","Text","$16faa998bc37dbb8$export$ffd9ea2d5a3f0bd5","getDefinitionAtPosition","entry1","refModel","$16faa998bc37dbb8$export$da977c26606f3d55","getReferencesAtPosition","entry2","$16faa998bc37dbb8$export$518742da69f0f5d5","getNavigationBarItems","convert","bucket","containerLabel","result2","$16faa998bc37dbb8$var$outlineTypeTable","SymbolKind","spans","selectionRange","containerName","childItems","child","Method","const","localFunction","$16faa998bc37dbb8$var$javaScriptWorker","$16faa998bc37dbb8$var$typeScriptWorker","$16faa998bc37dbb8$export$5f11d9cd5977d3d3","options","ConvertTabsToSpaces","insertSpaces","TabSize","tabSize","IndentSize","IndentStyle","NewLineCharacter","InsertSpaceAfterCommaDelimiter","InsertSpaceAfterSemicolonInForStatements","InsertSpaceBeforeAndAfterBinaryOperators","InsertSpaceAfterKeywordsInControlFlowStatements","InsertSpaceAfterFunctionKeywordForAnonymousFunctions","InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis","InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets","InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces","PlaceOpenBraceOnNewLineForControlBlocks","PlaceOpenBraceOnNewLineForFunctions","_convertTextChanges","change","newText","$16faa998bc37dbb8$export$6d0ff15f2673a4b4","startOffset","endOffset","edits","getFormattingEditsForRange","_convertOptions","edit","$16faa998bc37dbb8$export$3ae50d991894d528","autoFormatTriggerCharacters","ch","getFormattingEditsAfterKeystroke","$16faa998bc37dbb8$export$ca18d1b8110ae9c5","end","formatOptions","getOptions","errorCodes","markers","m","Number","codeFixes","getCodeFixesAtPosition","actions","fix","changes","isNewFile","_tsCodeFixActionToMonacoCodeAction","codeFix","textChange","textChanges","title","description","$16faa998bc37dbb8$export$33797a450c0c0a77","newName","renameInfo","getRenameInfo","allowRenameOfImportPath","canRename","rejectReason","localizedErrorMessage","fileToRename","renameLocations","findRenameLocations","renameLocation","model2","$16faa998bc37dbb8$export$9fb33b47ab60d93","provideInlayHints","hint","_convertHintKind","InlayHintKind","Parameter","Type","$16faa998bc37dbb8$export$fe02e3e074fe0a0e","$16faa998bc37dbb8$var$setupMode","$16faa998bc37dbb8$export$4911c01acb361b94","$16faa998bc37dbb8$export$42142bcd5970f8e8","resolve","reject","$16faa998bc37dbb8$export$f4433c6b950b070e","registerCompletionItemProvider","registerSignatureHelpProvider","registerHoverProvider","registerDocumentHighlightProvider","registerDefinitionProvider","registerReferenceProvider","registerDocumentSymbolProvider","registerDocumentRangeFormattingEditProvider","registerOnTypeFormattingEditProvider","registerCodeActionProvider","registerRenameProvider","registerInlayHintsProvider"],"version":3,"file":"tsMode.d97661b3.js.map"}